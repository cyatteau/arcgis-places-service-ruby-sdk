=begin
#ArcGIS places service

## ArcGIS places service  The places service can search for businesses, points of interest (POI), and popular geographic features near a location or within a bounding box.  You can use the service to:  * Find and display places on a map.  * Search for places by text and/or categories such as restaurants, gas stations, or schools.  * Find places near a location and display information such as place name, description, address, user ratings, store hours, and contact information.  * Find places within a bounding box (extent).  * Search for over 1,000 categories using the API or the [category browser](https://developers.arcgis.com/documentation/mapping-apis-and-services/places/places-category-finder/).   **Additional documentation**: To access the service with different client APIs, go to [Places](https://developers.arcgis.com/documentation/mapping-apis-and-services/places/) in the _Mapping APIs and location services_ guide.  ## Supported Operations  ### /categories  The `places/categories` endpoint returns the full list of categories supported by the service. There are over 1000 categories organized into a hierarchy. For example, a place that is in the category of \"French Restaurant\", can also be found through the parent category \"Restaurant\", which is also included in \"Dining and Drinking\".   If you want to view a specific subset of categories, you can supply a filter parameter to return a reduced list of categories which match your filter.  ### /categories/{categoryId}  The `/categories/{categoryId}` endpoint looks up details of a specific category using its ID and returns all the categories to which it belongs and the parent category ID.  ### places/near-point  The `places/near-point` endpoint returns places that are within a search distance of a geographic point. You can also supply additional search criteria, including:  - Search text, such as the place name, or partial name.   - The categories of places (for example, coffee shops or museums).  ### places/within-extent  The `places/within-extent` endpoint returns candidate places that are within an extent (or bounding box). You can also supply additional search criteria, including:  - Search text, such as the place name, or partial name.   - The categories of places (for example, coffee shops or museums).  ### places/{placeId} The `places/{placeId}` endpoint returns detailed information about a given place, including:  - Contact information.  - Address.  - Opening hours.  - Overall price.  - User rating.  ## Workflows  ### Local search In a local search application, follow these steps:  1. Make a `places/categories` request to get information about all available categories.  2. Let users select the categories they want. You will need the category Ids when searching for places. For example, if the target category is \"Bicycle Store\", the category Id is `17119`. Note that if you already know the category Id you are interested in, you can skip steps 1 and 2.  3. Pass the user's search location and a search distance, along with optional search criteria such as category, to `places/near-point` endpoint.  4. Present the user with the filtered places and let them choose those they want to see in more detail. You will need the `placeId` to fetch additional details.  5. Pass the `placeId` to `places/{placeId}` endpoint to get details for a specific place.   ## Units  - Geographic coordinates are in WGS84 decimal degrees, x is a longitude and y is a latitude. - Distances are in meters. 

The version of the OpenAPI document: 1.1.6

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.3.0

=end

# Common files
require 'openapi_client/api_client'
require 'openapi_client/api_error'
require 'openapi_client/version'
require 'openapi_client/configuration'

# Models
require 'openapi_client/models/additional_locations'
require 'openapi_client/models/address'
require 'openapi_client/models/categories_get200_response'
require 'openapi_client/models/category'
require 'openapi_client/models/category_details'
require 'openapi_client/models/chain_info'
require 'openapi_client/models/contact_info'
require 'openapi_client/models/error'
require 'openapi_client/models/error_error'
require 'openapi_client/models/hours'
require 'openapi_client/models/hours_by_day'
require 'openapi_client/models/near_point_get200_response'
require 'openapi_client/models/near_point_result'
require 'openapi_client/models/nullable_point'
require 'openapi_client/models/pagination'
require 'openapi_client/models/place_details'
require 'openapi_client/models/place_id_get200_response'
require 'openapi_client/models/point'
require 'openapi_client/models/rating'
require 'openapi_client/models/social_media'
require 'openapi_client/models/time_range'
require 'openapi_client/models/within_extent_get200_response'
require 'openapi_client/models/within_extent_result'

# APIs
require 'openapi_client/api/categories_api'
require 'openapi_client/api/places_api'

module OpenapiClient
  class << self
    # Customize default settings for the SDK using block.
    #   OpenapiClient.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
