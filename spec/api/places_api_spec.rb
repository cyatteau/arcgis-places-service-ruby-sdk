=begin
#ArcGIS places service

## ArcGIS places service  The places service can search for businesses, points of interest (POI), and popular geographic features near a location or within a bounding box.  You can use the service to:  * Find and display places on a map.  * Search for places by text and/or categories such as restaurants, gas stations, or schools.  * Find places near a location and display information such as place name, description, address, user ratings, store hours, and contact information.  * Find places within a bounding box (extent).  * Search for over 1,000 categories using the API or the [category browser](https://developers.arcgis.com/documentation/mapping-apis-and-services/places/places-category-finder/).   **Additional documentation**: To access the service with different client APIs, go to [Places](https://developers.arcgis.com/documentation/mapping-apis-and-services/places/) in the _Mapping APIs and location services_ guide.  ## Supported Operations  ### /categories  The `places/categories` endpoint returns the full list of categories supported by the service. There are over 1000 categories organized into a hierarchy. For example, a place that is in the category of \"French Restaurant\", can also be found through the parent category \"Restaurant\", which is also included in \"Dining and Drinking\".   If you want to view a specific subset of categories, you can supply a filter parameter to return a reduced list of categories which match your filter.  ### /categories/{categoryId}  The `/categories/{categoryId}` endpoint looks up details of a specific category using its ID and returns all the categories to which it belongs and the parent category ID.  ### places/near-point  The `places/near-point` endpoint returns places that are within a search distance of a geographic point. You can also supply additional search criteria, including:  - Search text, such as the place name, or partial name.   - The categories of places (for example, coffee shops or museums).  ### places/within-extent  The `places/within-extent` endpoint returns candidate places that are within an extent (or bounding box). You can also supply additional search criteria, including:  - Search text, such as the place name, or partial name.   - The categories of places (for example, coffee shops or museums).  ### places/{placeId} The `places/{placeId}` endpoint returns detailed information about a given place, including:  - Contact information.  - Address.  - Opening hours.  - Overall price.  - User rating.  ## Workflows  ### Local search In a local search application, follow these steps:  1. Make a `places/categories` request to get information about all available categories.  2. Let users select the categories they want. You will need the category Ids when searching for places. For example, if the target category is \"Bicycle Store\", the category Id is `17119`. Note that if you already know the category Id you are interested in, you can skip steps 1 and 2.  3. Pass the user's search location and a search distance, along with optional search criteria such as category, to `places/near-point` endpoint.  4. Present the user with the filtered places and let them choose those they want to see in more detail. You will need the `placeId` to fetch additional details.  5. Pass the `placeId` to `places/{placeId}` endpoint to get details for a specific place.   ## Units  - Geographic coordinates are in WGS84 decimal degrees, x is a longitude and y is a latitude. - Distances are in meters. 

The version of the OpenAPI document: 1.1.6

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.3.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::PlacesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'PlacesApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::PlacesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PlacesApi' do
    it 'should create an instance of PlacesApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::PlacesApi)
    end
  end

  # unit tests for near_point_get
  # Search for places near a point or location by radius.
  # The &#x60;/places/near-point&#x60; request finds places that are within a given radius of a specified location. The returned places contain basic data such as name, category and location.  To perform the request, you must supply the &#x60;x&#x60; and &#x60;y&#x60; coordinates of the point from which to search. Optionally, you can also specify the:   - Search radius (up to 10,000 meters)  - Category IDs  - Search text  If the &#x60;pagination.nextUrl&#x60; property in the response is populated, then you can page through the results to return more places. The maximum number of places that can be paged to is 200.  **Note**: You cannot permanently store places. Please see the [Terms of use](https://developers.arcgis.com/documentation/mapping-apis-and-services/deployment/terms-of-use/).  **Note**: Query parameters are case-sensitive. 
  # @param x The x coordinate, or longitude, to search from, in WGS84 decimal degrees.
  # @param y The y coordinate, or latitude, to search from, in WGS84 decimal degrees.
  # @param [Hash] opts the optional parameters
  # @option opts [Float] :radius The radius in meters to search for places - measured from the supplied &#x60;x&#x60; and &#x60;y&#x60; coordinate.   A radius of 100 meters will result in a circular search area that is 200 meters in diameter. If omitted, the default search radius will be 1,000 meters. 
  # @option opts [Array<String>] :category_ids Filters places to those that match the category Ids.   Places will be returned if they match _any_ of the category Ids. If this property is not set, places will be returned regardless of their category.  You can obtain information on category Ids from the &#x60;places/categories&#x60; endpoint. For example, to filter for places where the category is \&quot;Bicycle Store\&quot;, include the categoryId &#x60;17117&#x60; in this property.  You can search up to a maximum of &#x60;10&#x60; category Ids. 
  # @option opts [String] :search_text Free search text for places against names, categories etc. 
  # @option opts [Integer] :page_size The number of places that should be sent in the response for a single request.   You can set this to any value up to &#x60;20&#x60; when you need to control the size of responses that your app downloads.  If the query results in more than this page size, then the response object will contain a &#x60;pagination.nextUrl&#x60;. This can be used to request the next page of results.  Regardless of paging, the maximum number of places that can be returned in total is &#x60;200&#x60;.  The default &#x60;pageSize&#x60; is 10. 
  # @option opts [Integer] :offset Request results starting from the given offset.   This parameter works with the &#x60;pageSize&#x60; parameter to fetch results from subsequent pages. For example, with a page size of 2, setting the &#x60;offset&#x60; to &#x60;2&#x60; would return the 3rd and 4th results.  Regardless of paging, the maximum number of places that can be returned in total is &#x60;200&#x60;. 
  # @option opts [String] :f The requested response format - either &#x60;json&#x60; or &#x60;pjson&#x60; (pretty json). 
  # @option opts [String] :token The authentication token with the &#x60;premium:user:places&#x60; [privilege](https://developers.arcgis.com/rest/users-groups-and-items/privileges.htm), used to access the Places service.  The &#x60;token&#x60; parameter can be either an API Key or short-lived token. See [ArcGIS security documentation](https://developers.arcgis.com/documentation/mapping-apis-and-services/security/) for more information on authenticating with a token or API key.  Alternatively, you can supply a token in the request header with one of the following keys using the \&quot;Bearer\&quot; scheme:  - &#x60;Authorization: Bearer &lt;YOUR_TOKEN&gt;&#x60; - &#x60;X-Esri-Authorization: Bearer &lt;YOUR_TOKEN&gt;&#x60; 
  # @return [NearPointGet200Response]
  describe 'near_point_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for place_id_get
  # Get place details including name, address, description, and other attributes.
  # The &#x60;/places/{placeId}&#x60; request returns details for a place.   To request details, you use the &#x60;requestedFields&#x60; parameter to specify the fields and the attributes you want from the **Place**, **Address**, **Details** and/or **Location** price groups.   It is always recommended to specify the fields you want, however, you can also use &#x60;requestedFields&#x3D;all&#x60; to return all of the attributes available. By default, The &#x60;placeId&#x60; attribute is always returned in addition to the other attributes you requested.  The attributes available for places may vary. For example, opening hours may not be available (or applicable) for geographic places or landmarks.   You will only be charged for attributes that contain valid values for the requested fields. If no data is available for the requested field, &#x60;null&#x60; or an empty collection  is returned and you are not charged. You are only charged once if one or more attributes with valid values are returned from a price group. To learn more, go to [Pricing](https://developers.arcgis.com/pricing/).   Field | Price group --- | --- additionalLocations:dropOff | Location additionalLocations:frontDoor | Location additionalLocations:road | Location additionalLocations:roof | Location address:adminRegion | Address address:censusBlockId | Address address:country | Address address:designatedMarketArea | Address address:extended | Address address:locality | Address address:neighborhood | Address address:poBox | Address address:postcode | Address address:postTown | Address address:region | Address address:streetAddress | Address categories | Place chains | Details contactInfo:email | Details contactInfo:fax | Details contactInfo:telephone | Details contactInfo:website | Details description | Details hours:opening | Details hours:openingText | Details hours:popular | Details location | Location name | Place rating:price | Details rating:user | Details socialMedia:facebookId | Details socialMedia:instagram | Details socialMedia:twitter | Details  **Note**: You cannot permanently store places. Please see the [Terms of use](https://developers.arcgis.com/documentation/mapping-apis-and-services/deployment/terms-of-use/).  **Note**: Query parameters are case-sensitive.  **Note**: Can be used in conjunction with the [Basemap Styles V2 service](https://developers.arcgis.com/rest/basemap-styles) to request additional attributes for places retrieved using the [Places for basemaps](https://developers.arcgis.com/documentation/mapping-apis-and-services/maps/places-for-basemaps) workflow. 
  # @param place_id The Id of the place for which you want to fetch additional details.
  # @param requested_fields The array of fields that define the attributes to return for a place.  Use this parameter to define the attributes you would like returned, for example &#x60;requestedFields&#x3D;name,address:streetAddress&#x60;. However, you can also set this value to &#x60;requestedFields&#x3D;all&#x60; to return all of the attributes available for a place.   The &#x60;placeId&#x60; attribute is always returned in addition to the other attributes you requested. If a valid attribute value is not available, &#x60;null&#x60;, or an empty collection, is returned and you are not charged for it. To see the fields and pricing groups they belong to, go to the table above. 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :f The requested response format - either &#x60;json&#x60; or &#x60;pjson&#x60; (pretty json). 
  # @option opts [String] :token The authentication token with the &#x60;premium:user:places&#x60; [privilege](https://developers.arcgis.com/rest/users-groups-and-items/privileges.htm), used to access the Places service.  The &#x60;token&#x60; parameter can be either an API Key or short-lived token. See [ArcGIS security documentation](https://developers.arcgis.com/documentation/mapping-apis-and-services/security/) for more information on authenticating with a token or API key.  Alternatively, you can supply a token in the request header with one of the following keys using the \&quot;Bearer\&quot; scheme:  - &#x60;Authorization: Bearer &lt;YOUR_TOKEN&gt;&#x60; - &#x60;X-Esri-Authorization: Bearer &lt;YOUR_TOKEN&gt;&#x60; 
  # @return [PlaceIdGet200Response]
  describe 'place_id_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for within_extent_get
  # Search for places within an extent (bounding box).
  # The &#x60;/places/within-extent&#x60; request searches for places within an extent (bounding box).    You must supply the &#x60;xmin&#x60;, &#x60;ymin&#x60;, &#x60;xmax&#x60; and &#x60;ymax&#x60; coordinates to define the extent. The maximum width and height of an extent that can be used in a search is 20,000 meters.  You can also provide multiple categories or search text to find specific types of places within the extent.  The default number of places returned (&#x60;pageSize&#x60;) is 10. The maximum &#x60;pageSize&#x60; value is 20.   If the &#x60;pagination.nextUrl&#x60; property in the response is populated, then you can page through the results to return more places. The maximum number of places that can be paged to is 200.  **Note**: You cannot permanently store places. Please see the [Terms of use](https://developers.arcgis.com/documentation/mapping-apis-and-services/deployment/terms-of-use/).  **Note**: Query parameters are case-sensitive. 
  # @param xmin The minimum x coordinate, or longitude, of the search extent.   This is the furthest _west_ that will be searched. 
  # @param ymin The minimum y coordinate, or latitude, of the search extent.   This is the furthest _south_ that will be searched. 
  # @param xmax The maximum x coordinate, or longitude, of the search extent.   This is the furthest _east_ that will be searched. 
  # @param ymax The maximum y coordinate, or latitude, of the search extent.   This is the furthest _north_ that will be searched. 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :category_ids Filters places to those that match the category Ids.   Places will be returned if they match _any_ of the category Ids. If this property is not set, places will be returned regardless of their category.  You can obtain information on category Ids from the &#x60;places/categories&#x60; endpoint. For example, to filter for places where the category is \&quot;Bicycle Store\&quot;, include the categoryId &#x60;17117&#x60; in this property.  You can search up to a maximum of &#x60;10&#x60; category Ids. 
  # @option opts [String] :search_text Free search text for places against names, categories etc. 
  # @option opts [Integer] :page_size The number of places that should be sent in the response for a single request.   You can set this to any value up to &#x60;20&#x60; when you need to control the size of responses that your app downloads.  If the query results in more than this page size, then the response object will contain a &#x60;pagination.nextUrl&#x60;. This can be used to request the next page of results.  Regardless of paging, the maximum number of places that can be returned in total is &#x60;200&#x60;.  The default &#x60;pageSize&#x60; is 10. 
  # @option opts [Integer] :offset Request results starting from the given offset.   This parameter works with the &#x60;pageSize&#x60; parameter to fetch results from subsequent pages. For example, with a page size of 2, setting the &#x60;offset&#x60; to &#x60;2&#x60; would return the 3rd and 4th results.  Regardless of paging, the maximum number of places that can be returned in total is &#x60;200&#x60;. 
  # @option opts [String] :f The requested response format - either &#x60;json&#x60; or &#x60;pjson&#x60; (pretty json). 
  # @option opts [String] :token The authentication token with the &#x60;premium:user:places&#x60; [privilege](https://developers.arcgis.com/rest/users-groups-and-items/privileges.htm), used to access the Places service.  The &#x60;token&#x60; parameter can be either an API Key or short-lived token. See [ArcGIS security documentation](https://developers.arcgis.com/documentation/mapping-apis-and-services/security/) for more information on authenticating with a token or API key.  Alternatively, you can supply a token in the request header with one of the following keys using the \&quot;Bearer\&quot; scheme:  - &#x60;Authorization: Bearer &lt;YOUR_TOKEN&gt;&#x60; - &#x60;X-Esri-Authorization: Bearer &lt;YOUR_TOKEN&gt;&#x60; 
  # @return [WithinExtentGet200Response]
  describe 'within_extent_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
